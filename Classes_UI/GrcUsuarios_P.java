package Classes_UI;

import Classes_Base.Usuário;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/** @author Mateus */
public class GrcUsuarios_P extends javax.swing.JPanel {

  UIGovernor_F UImaster;
  JFrame newUserFrame;
  JFrame framePai; // frame que contém esse JPanel

  private void populaSeletorUsuario() {
    gerencUSR_Seletor.removeAllItems();

    UImaster.UserBase.getUserList()
        .forEach(
            (u) -> {
              gerencUSR_Seletor.addItem(u);
            });
  }

  public GrcUsuarios_P(UIGovernor_F UImaster) {

    this.UImaster = UImaster;
    initComponents();
    this.populaSeletorUsuario();
    this.logadoComo_label.setText("Logado Como: " + UImaster.CurrentUser.toString());
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    gerencUSR_Seletor = new javax.swing.JComboBox<>();
    jSeparator1 = new javax.swing.JSeparator();
    mudarSenha_Button = new javax.swing.JButton();
    excluirUSR_Button = new javax.swing.JButton();
    mudarID_Button = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    TornarADM_OPR_Button = new javax.swing.JButton();
    addUser_Button = new javax.swing.JButton();
    logadoComo_label = new javax.swing.JLabel();

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel1.setText("Gerenciar Usuários");

    jLabel2.setText("Selecionar Usuário:");

    gerencUSR_Seletor.addPopupMenuListener(
        new javax.swing.event.PopupMenuListener() {
          public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {}

          public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            gerencUSR_SeletorPopupMenuWillBecomeInvisible(evt);
          }

          public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            gerencUSR_SeletorPopupMenuWillBecomeVisible(evt);
          }
        });
    gerencUSR_Seletor.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            gerencUSR_SeletorActionPerformed(evt);
          }
        });

    mudarSenha_Button.setText("Mudar Senha");
    mudarSenha_Button.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            mudarSenha_ButtonMouseClicked(evt);
          }
        });

    excluirUSR_Button.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    excluirUSR_Button.setForeground(new java.awt.Color(255, 0, 51));
    excluirUSR_Button.setText("Excluir");
    excluirUSR_Button.setDoubleBuffered(true);
    excluirUSR_Button.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            excluirUSR_ButtonMouseClicked(evt);
          }
        });
    excluirUSR_Button.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            excluirUSR_ButtonActionPerformed(evt);
          }
        });

    mudarID_Button.setText("Mudar ID");
    mudarID_Button.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            mudarID_ButtonMouseClicked(evt);
          }
        });

    jLabel4.setText("Somente ADMs podem modificar outros usuários");

    TornarADM_OPR_Button.setText("Tornar Operador");
    TornarADM_OPR_Button.addMouseListener(
        new java.awt.event.MouseAdapter() {
          public void mouseClicked(java.awt.event.MouseEvent evt) {
            TornarADM_OPR_ButtonMouseClicked(evt);
          }

          public void mouseEntered(java.awt.event.MouseEvent evt) {
            TornarADM_OPR_ButtonMouseEntered(evt);
          }
        });

    addUser_Button.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    addUser_Button.setForeground(new java.awt.Color(102, 153, 0));
    addUser_Button.setText("+");
    addUser_Button.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            addUser_ButtonActionPerformed(evt);
          }
        });

    logadoComo_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    logadoComo_label.setText("Logado como: ");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(
                                javax.swing.GroupLayout.Alignment.TRAILING,
                                layout
                                    .createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(
                                                jSeparator1,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                341,
                                                Short.MAX_VALUE)
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addGap(52, 52, 52)
                                                    .addComponent(jLabel4)
                                                    .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addComponent(
                                                        gerencUSR_Seletor,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        176,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(
                                                        javax.swing.LayoutStyle.ComponentPlacement
                                                            .UNRELATED)
                                                    .addComponent(addUser_Button))))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addGroup(
                                        layout
                                            .createParallelGroup(
                                                javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addComponent(
                                                        mudarID_Button,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(
                                                        mudarSenha_Button,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(
                                                layout
                                                    .createSequentialGroup()
                                                    .addComponent(
                                                        TornarADM_OPR_Button,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(
                                                        excluirUSR_Button,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE))))
                            .addGroup(
                                layout
                                    .createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(
                                        logadoComo_label,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)))
                    .addContainerGap()));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
                layout
                    .createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(24, 24, 24)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(
                                gerencUSR_Seletor,
                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(
                                addUser_Button,
                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                29,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mudarID_Button)
                            .addComponent(mudarSenha_Button))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(
                        layout
                            .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TornarADM_OPR_Button)
                            .addComponent(excluirUSR_Button))
                    .addGap(23, 23, 23)
                    .addComponent(
                        jSeparator1,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        5,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(
                        jLabel4,
                        javax.swing.GroupLayout.PREFERRED_SIZE,
                        14,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(
                        javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                    .addComponent(logadoComo_label)
                    .addContainerGap()));
  } // </editor-fold>//GEN-END:initComponents

  private void addUser_ButtonActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_addUser_ButtonActionPerformed
    framePai = (JFrame) SwingUtilities.getWindowAncestor(this);
    framePai.setEnabled(false);

    newUserFrame = new NovoUsuario_F(UImaster, false, framePai);

    newUserFrame.addWindowListener(
        new WindowAdapter() {
          @Override
          public void windowClosing(WindowEvent e) {
            framePai.setEnabled(true);
            // listener pra quando fechar [X] a janela de novo usuário
          }

          @Override
          public void windowClosed(WindowEvent e) {
            // listener pra quando o o usuário clicar OK e a janela fechar com dispose
            framePai.setEnabled(true);
            framePai.setAlwaysOnTop(true); // único jeito que consegui trazer a janela pro topo
            framePai.setAlwaysOnTop(false);
          }
        });
  } // GEN-LAST:event_addUser_ButtonActionPerformed

  private void gerencUSR_SeletorPopupMenuWillBecomeVisible(
      javax.swing.event.PopupMenuEvent
          evt) { // GEN-FIRST:event_gerencUSR_SeletorPopupMenuWillBecomeVisible
    this.populaSeletorUsuario();
    // repopula a comboBox assim que o usuário clica nele, para evitar
    // não aparecer novos usuários criados ou modificados.
  } // GEN-LAST:event_gerencUSR_SeletorPopupMenuWillBecomeVisible

  private void TornarADM_OPR_ButtonMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_TornarADM_OPR_ButtonMouseClicked
    // Botão de troca pra ADM ou OPERADOR

    Usuário user = (Usuário) this.gerencUSR_Seletor.getSelectedItem();

    if (UImaster.CurrentUser.isADM()) {
      if (user.isADM() && UImaster.UserBase.getADMcount() > 1) {
        user.putADM(false);
      } else {
        user.putADM(true);
      }
    } else {
      JOptionPane.showMessageDialog(
          null, "Você não tem permissão para realizar esta operação (Apenas Administradores)");
    }
    UImaster.UserBase.atualiza();
    gerencUSR_Seletor.repaint();
  } // GEN-LAST:event_TornarADM_OPR_ButtonMouseClicked

  private void gerencUSR_SeletorPopupMenuWillBecomeInvisible(
      javax.swing.event.PopupMenuEvent
          evt) { // GEN-FIRST:event_gerencUSR_SeletorPopupMenuWillBecomeInvisible
    Usuário selectedUser = (Usuário) gerencUSR_Seletor.getSelectedItem();
    Usuário currentUser = UImaster.CurrentUser;

    // Somente ADMs podem mexer nesse botão

    if (selectedUser.isADM()) {
      TornarADM_OPR_Button.setText("Tornar Operador");
      if (UImaster.UserBase.getADMcount() <= 1) {
        this.TornarADM_OPR_Button.setEnabled(false);
      } else {
        this.TornarADM_OPR_Button.setEnabled(true);
      }

    } else { // não é ADM
      this.TornarADM_OPR_Button.setEnabled(false);
      TornarADM_OPR_Button.setText("Tornar ADM");
    }
  } // GEN-LAST:event_gerencUSR_SeletorPopupMenuWillBecomeInvisible

  private void TornarADM_OPR_ButtonMouseEntered(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_TornarADM_OPR_ButtonMouseEntered
    Usuário selectedUser = (Usuário) gerencUSR_Seletor.getSelectedItem();
    Usuário currentUser = UImaster.CurrentUser;

    if (currentUser.isADM()) {
      if (selectedUser.isADM()) {
        TornarADM_OPR_Button.setText("Tornar Operador");
        if (UImaster.UserBase.getADMcount() <= 1) {
          TornarADM_OPR_Button.setEnabled(false);
        } else {
          TornarADM_OPR_Button.setEnabled(true);
        }

      } else {
        TornarADM_OPR_Button.setText("Tornar ADM");
        this.TornarADM_OPR_Button.setEnabled(true);
      }

    } else {
      // Current User é operador, não pode mexer nessa opção
      this.TornarADM_OPR_Button.setEnabled(false);
    }
  } // GEN-LAST:event_TornarADM_OPR_ButtonMouseEntered

  private void excluirUSR_ButtonMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_excluirUSR_ButtonMouseClicked
    Usuário selectedUser =
        (Usuário) gerencUSR_Seletor.getSelectedItem(); // usuário seleciondo na combobox
    Usuário currentUser = UImaster.CurrentUser; // usuário logado

    if (currentUser.isADM()) {
      if (selectedUser.isADM()) {
        if (UImaster.UserBase.getADMcount() > 1) {
          UImaster.UserBase.removerUsuário(selectedUser);
          UImaster.UserBase.atualiza();
          JOptionPane.showMessageDialog(
              null,
              "Usuário "
                  + selectedUser
                  + " Removido com Sucesso. Se você removeu o usuário logado atualmente, faça login novamente");
          if (currentUser.equals(selectedUser)) {
            UImaster.reLogin();
            SwingUtilities.getWindowAncestor(this)
                .dispose(); // fecha essa janela de gerenciamentos de usuários.
          }
        } else {
          JOptionPane.showMessageDialog(null, "É necessario haver ao menos 1 ADM Cadastrado");
        }
      } else {
        // selectedUser não é ADM, pode ser removido normalmente
        UImaster.UserBase.removerUsuário(selectedUser);
        UImaster.UserBase.atualiza();
        JOptionPane.showMessageDialog(
            null,
            "Usuário "
                + selectedUser
                + " Removido com Sucesso. Se você removeu o usuário logado atualmente o programa irá fechar");
      }
    }

    // Usuário logado não é ADM, limita oq ele pode fazer (somente remover a si próprio)
    else {
      if (selectedUser.equals(UImaster.CurrentUser)) {
        UImaster.UserBase.removerUsuário(selectedUser);
        UImaster.UserBase.atualiza();
        JOptionPane.showMessageDialog(
            null, "Usuário " + selectedUser + " Removido com Sucesso. Faça login novamente");
        UImaster.reLogin();
        SwingUtilities.getWindowAncestor(this)
            .dispose(); // fecha essa janela de gerenciamentos de usuários.
      } else {
        JOptionPane.showMessageDialog(
            null, "Apenas admnistradores podem modificar outros usuários.");
      }
    }
    gerencUSR_Seletor.repaint();
  } // GEN-LAST:event_excluirUSR_ButtonMouseClicked

  private void mudarSenha_ButtonMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_mudarSenha_ButtonMouseClicked
    Usuário selectedUser = (Usuário) gerencUSR_Seletor.getSelectedItem();
    String novaSenha;

    if (UImaster.CurrentUser.isADM()) {
      novaSenha = JOptionPane.showInputDialog(null, "Insira a nova senha (case-sensitive)");
      if (novaSenha != null) {
        selectedUser.setPassword(novaSenha);
        UImaster.UserBase.atualiza();
        JOptionPane.showMessageDialog(null, "Senha Modificada com Sucesso!");
      }
    }

    // Usuário logado não é ADM, limita oq ele pode fazer (somente mexer em si próprio)
    else {
      if (selectedUser.equals(UImaster.CurrentUser)) {
        novaSenha = JOptionPane.showInputDialog(null, "Insira a nova senha (case-sensitive)");
        if (novaSenha != null) {
          selectedUser.setPassword(novaSenha);
          UImaster.UserBase.atualiza();
          JOptionPane.showMessageDialog(null, "Senha Modificada com Sucesso!");
        }
      } else {
        JOptionPane.showMessageDialog(
            null, "Apenas admnistradores podem modificar outros usuários.");
      }
    }
    gerencUSR_Seletor.repaint();
  } // GEN-LAST:event_mudarSenha_ButtonMouseClicked

  private void excluirUSR_ButtonActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_excluirUSR_ButtonActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_excluirUSR_ButtonActionPerformed

  private void mudarID_ButtonMouseClicked(
      java.awt.event.MouseEvent evt) { // GEN-FIRST:event_mudarID_ButtonMouseClicked
    // TODO add your handling code here:
    Usuário selectedUser = (Usuário) gerencUSR_Seletor.getSelectedItem();
    Usuário currentUser = UImaster.CurrentUser;
    String oldID = selectedUser.getID();

    if (currentUser.isADM()) {
      String newID = JOptionPane.showInputDialog("Digite a nova ID de Login");
      if (newID.compareTo("") != 0 && newID != null) {
        selectedUser.setID(newID);
        UImaster.UserBase.atualiza();
        JOptionPane.showMessageDialog(null, ("Usuário: " + oldID + "foi renomeado para: " + newID));
        this.logadoComo_label.setText("Logado como: " + newID);
        UImaster.menuPrincipal.updateUserNameLabel(
            newID); // atualiza o "logado como" do menu principal
      }
    } else {
      if (selectedUser.equals(currentUser)) {
        String newID = JOptionPane.showInputDialog("Digite a nova ID de Login");
        if (newID.compareTo("") != 0 && newID != null) {
          selectedUser.setID(newID);
          UImaster.UserBase.atualiza();
          JOptionPane.showMessageDialog(
              null, ("Usuário: " + oldID + "foi renomeado para: " + newID));
          this.logadoComo_label.setText("Logado como: " + newID);
          UImaster.menuPrincipal.updateUserNameLabel(
              newID); // atualiza o "logado como" do menu principal
        }
      } else {
        JOptionPane.showMessageDialog(
            null, "Somente admnistradores podem modificar outros usuários");
      }
    }
  } // GEN-LAST:event_mudarID_ButtonMouseClicked

  private void gerencUSR_SeletorActionPerformed(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_gerencUSR_SeletorActionPerformed
    // TODO add your handling code here:
  } // GEN-LAST:event_gerencUSR_SeletorActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton TornarADM_OPR_Button;
  private javax.swing.JButton addUser_Button;
  private javax.swing.JButton excluirUSR_Button;
  private javax.swing.JComboBox<Usuário> gerencUSR_Seletor;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JLabel logadoComo_label;
  private javax.swing.JButton mudarID_Button;
  private javax.swing.JButton mudarSenha_Button;
  // End of variables declaration//GEN-END:variables
}
