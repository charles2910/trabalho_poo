package Classes_UI;

import Classes_Base.Usuário;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Mateus 9266410
 */
public class Novo_Usuário_P extends javax.swing.JPanel {

    UIGovernor_F UImaster;
    boolean forceADM; //esse boleano serve para saber se o menu de novo usuário foi invocado pelo primeiro acesso, no qual o usuário deverá ser ADM
    JFrame framePai; //Frame q contém esse PANEL
    
    public Novo_Usuário_P(UIGovernor_F UImaster, boolean forceADM) {
        this.UImaster = UImaster;
        this.forceADM = forceADM;  
        initComponents();
        this.novoUsuarioAdm_Checkbox.setSelected(forceADM); //Se for um primeiro usuário, a caixa de seleção de admnistrador já fica selecionada default. Caso contrário, o default é não admnistrador
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        novoUsuarioSenha_PassField = new javax.swing.JPasswordField();
        novoUsuarioAdm_Checkbox = new javax.swing.JCheckBox();
        novoUsuarioOK_button = new javax.swing.JButton();
        novoUsuarioID_textField = new javax.swing.JTextField();

        jLabel1.setText("Criar Novo Usuário do Sistema:");

        jLabel2.setText("ID:");

        jLabel3.setText("Senha:");

        novoUsuarioAdm_Checkbox.setText("Tornar Administrador");
        novoUsuarioAdm_Checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoUsuarioAdm_CheckboxActionPerformed(evt);
            }
        });

        novoUsuarioOK_button.setText("OK");
        novoUsuarioOK_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoUsuarioOK_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(novoUsuarioID_textField)
                            .addComponent(novoUsuarioSenha_PassField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(novoUsuarioAdm_Checkbox)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(novoUsuarioOK_button)
                        .addGap(70, 70, 70))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(novoUsuarioID_textField)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novoUsuarioSenha_PassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(novoUsuarioAdm_Checkbox)
                .addGap(18, 18, 18)
                .addComponent(novoUsuarioOK_button)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void novoUsuarioAdm_CheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoUsuarioAdm_CheckboxActionPerformed
        if(forceADM) {
            this.novoUsuarioAdm_Checkbox.setSelected(true);
            JOptionPane.showMessageDialog(UImaster, "No primeiro acesso, o usuário precisa ser um admnistrador.");
        }
        
        //essa checagem é pra não deixar o usuário criar um primeiro cadastro sem ser admnistrador
        //caso ele desmarque a caixa de adm o programa remarca e exibe uma mensagem
    }//GEN-LAST:event_novoUsuarioAdm_CheckboxActionPerformed

    private void novoUsuarioOK_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoUsuarioOK_buttonActionPerformed
        //Rotina de criar um novo usuário, evendo disparado pelo clique no botão OK da janela de criar novo usuário.
        Usuário newUser;
        String userID = novoUsuarioID_textField.getText(); //pega a ID do usuário no campo de ID
        String userPassword = new String((novoUsuarioSenha_PassField.getPassword()));  //pega a senha do campo de senha
        
        //resolvendo se o usuário será ADM
        boolean isADM; //Diz se o usuário será ou não ADM, parâmetro do construtor de Usuário
        if (forceADM == true) //nesse caso, a criação de um novo usuário foi invocada pelo "primeiro cadastro", o usuário obriatoriamente será ADM 
            isADM = true; 
        else
            isADM = this.novoUsuarioAdm_Checkbox.isSelected();  //captura o dado selecionado na checkbox "tornar ADM"
        
        
        //Trata os possíveis erros de inserção de dados (sem ID ou senha)
        if(userID.isEmpty()){
            JOptionPane.showMessageDialog(null, " Digite um Nome de Usuário (Será a sua ID de login)");
        }
        else 
            if(userPassword.isEmpty()){
                JOptionPane.showMessageDialog(null, "Digite uma senha no campo de senha");
            }
            else{ //Quando finalmente tudo está correto e o usuário será incluido na database
                newUser = new Usuário(userID, userPassword, isADM);
                UImaster.UserBase.addUsuário(newUser);
                JOptionPane.showMessageDialog(null, "O Usuário " + userID + "  foi criado com sucesso!"); //confirma na tela a criação
                UImaster.UserBase.atualiza();
                if(forceADM) UImaster.UpdateLoginScreen(); //se "forceADM = true", então quem invocou a criação de um usuário foi a loginScreen. Essa rotina atualiza os usuários na ComboBox

                SwingUtilities.getWindowAncestor(this).dispose(); //Fecha o frame que contém este painél
                
            }       
    }//GEN-LAST:event_novoUsuarioOK_buttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox novoUsuarioAdm_Checkbox;
    private javax.swing.JTextField novoUsuarioID_textField;
    private javax.swing.JButton novoUsuarioOK_button;
    private javax.swing.JPasswordField novoUsuarioSenha_PassField;
    // End of variables declaration//GEN-END:variables
}
